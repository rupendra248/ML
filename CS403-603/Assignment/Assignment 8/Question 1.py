# -*- coding: utf-8 -*-
"""8_ML_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F0FZx81_t5sR8GWH0uUB1dOyHkxBYxg7
"""

import math

X = [1,2,3,4,5,6]
Y = [6,5,8,4,7,9]
C1 = [0.8,0.9,0.7,0.3,0.5,0.2]
C2 = [0.2,0.1,0.3,0.7,0.5,0.8]

def centroid(X,Y,C):
    uper_sum=0
    lower_sum=0
    for i in range(len(X)):
        uper_sum=uper_sum+ X[i]*C[i]*C[i]
        lower_sum=lower_sum + C[i]*C[i]
    first_C =uper_sum/lower_sum
    uper_sum = 0
    lower_sum = 0
    for i in range(len(Y)):
        uper_sum = uper_sum + Y[i] * C[i] * C[i]
        lower_sum = lower_sum + C[i] * C[i]
    second_C = uper_sum/lower_sum
    centroid_list=[first_C,second_C]
    return centroid_list

def distance(X,Y,C):
    dist=[]
    for i in range(len(X)):
        res = math.sqrt(((X[i]-C[0]) ** 2) + ((Y[i]-C[1])**2))
        print(X[i], " ", Y[i], " ", C[0], " ", C[1], "Distance ",res)
        dist.append(res)
    return dist

def membership(distance1,distance2):
    m1=[]
    for i in range(len(distance1)):
        res = ((1/distance1[i])/((1/distance1[i])+(1/distance2[i])))
        m1.append(res)
    return m1

centroid_member_now=[]
centroid_member_prev=[]
i=0
flag = 1
while(1):
    #Step 1 Find the constraints
    centroid1 = centroid(X,Y,C1)
    centroid2 = centroid(X,Y,C2)
    print("Centroid 1 (",centroid1[0],",",centroid1[1],")")
    print("Centroid 2 (", centroid2[0], ",", centroid2[1], ")")
    #Step 2 Distance
    print("Distances from Centroid 1:")
    distance1 = distance(X,Y,centroid1)
    print("\n\nDistances from Centroid 2:")
    distance2 = distance(X,Y,centroid2)
    #Step 3 Update membership Value
    membership1 = membership(distance1,distance2)
    membership2 = membership(distance2,distance1)
    print("Membership 1\n",membership1)
    print("\n\nMembership2 \n",membership2)
    #flag = 0
    if i == 0:
        for j in range(len(membership1)):
            if membership1[j] > membership2[j]:
                centroid_member_now.append(0)
            else:
                centroid_member_now.append(1)
        C1 = membership1
        C2 = membership2
    else:
            flag = 0
            centroid_member_prev = centroid_member_now
            centroid_member_now=[]
            C1 = membership1
            C2 = membership2
            for j in range(len(membership1)):
                if membership1[j] > membership2[j]:
                    centroid_member_now.append(0)
                else:
                    centroid_member_now.append(1)

            for j in range(len(centroid_member_now)):
                if centroid_member_now[j] != centroid_member_prev[j]:
                    flag=1
                    break
    print("Previous",centroid_member_prev)
    print("Now",centroid_member_now)
    if flag == 0:
        print("The Final Membership1 and Membership2 Values are",membership1,"\n", membership2)
        break
    i = i+1